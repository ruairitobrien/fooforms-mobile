angular.module("fooforms", ["fooforms.controllers", "fooforms.services", "fooforms.directives", "fooforms.constants", "fooforms.config", "fooforms.authentication", "fooforms.dashboard", "fooforms.organisation", "ionic", "lodash", "restangular"]).run(["$rootScope", "$ionicPlatform", function (o, r) {
    r.ready(function () {
        window.cordova && window.cordova.plugins.Keyboard && cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0), window.StatusBar && StatusBar.styleBlackOpaque()
    })
}]);
angular.module("fooforms.config", ["ionic", "restangular"]).config(["$compileProvider", function (t) {
    "use strict";
    t.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|tel):/)
}]).config(["$httpProvider", function (t) {
    "use strict";
    t.defaults.timeout = 1e4
}]).config(["RestangularProvider", "SERVER", function (t, e) {
    t.setBaseUrl(e.rootUrl + "/api"), t.setDefaultHeaders({"Content-Type": "application/json"}), t.setRestangularFields({
        id: "_id",
        selfLink: "self.link"
    }), t.addResponseInterceptor(function (t, e) {
        var o;
        return "getList" === e && t.data ? (o = t.data, o.has_more = t.has_more, o.objectType = t.object) : o = t, o
    })
}]).config(["$stateProvider", "$urlRouterProvider", function (t, e) {
    t.state("login", {
        url: "/login",
        templateUrl: "templates/login.html",
        controller: "LoginCtrl"
    }).state("logout", {
        url: "/logout",
        templateUrl: "templates/logout.html",
        controller: "LogoutCtrl"
    }).state("app", {
        url: "/app",
        "abstract": !0,
        templateUrl: "templates/menu.html",
        controller: "AppCtrl",
        resolve: {
            session: function (t) {
                return t.checkSession()
            }
        }
    }).state("app.dashboard", {
        url: "/dashboard",
        views: {menuContent: {controller: "DashboardCtrl", templateUrl: "templates/dashboard.html"}}
    }), e.otherwise("/login")
}]);
angular.module("fooforms.constants", []).constant("SERVER", {rootUrl: "https:/fooforms.com"});
angular.module("fooforms.controllers", []).controller("AppCtrl", ["$scope", function () {
}]);
angular.module("fooforms.directives", []).directive("hideOnErr", function () {
    "use strict";
    return {
        link: function (i, r) {
            r.bind("error", function () {
                r.hide()
            })
        }
    }
});
angular.module("lodash",[]).factory("_",function(){"use strict";return window._});
angular.module("fooforms.services", []).factory("SessionService", ["$location", "$q", "$log", "_", "AuthService", "DashboardService", "OrganisationService", "Session", function (e, r, s, o, i, n, t, a) {
    return {
        checkSession: function () {
            var u = r.defer();
            return i.isAuthenticated() ? u.resolve(a.user) : i.checkStoredCredentials(function (r) {
                r && s.log(r), i.isAuthenticated() ? n.getUserDashboard(function (e, r) {
                    e ? s.error(e) : (r.photo || (r.photo = "/assets/images/photo.jpg"), r.self = {}, r.self.link = "/api/users/" + r._id, a.user = r, o.forEach(a.user.organisations, function (e) {
                        e.teams = o.filter(a.user.teams, {organisation: e._id})
                    }), a.org = angular.copy(a.user.organisations[0]), t.getMembers(a.user.organisations[0], function (e, r) {
                        a.org.members = r;
                        for (var s = 0; s < a.org.members.length; s++)a.org.members[s].self = {}, a.org.members[s].self.link = "/api/users/" + a.org.members[s]._id
                    }), u.resolve(a.user))
                }) : "/login" !== e.path() && e.path("/login")
            }), u.promise
        }
    }
}]);
angular.module("fooforms.authentication", ["ngCookies"]);
angular.module("fooforms.authentication").constant("USER_ROLES", {
    all: "*",
    admin: "admin",
    user: "user"
}).constant("AUTH_EVENTS", {
    loginSuccess: "auth-login-success",
    loginFailed: "auth-login-failed",
    logoutSuccess: "auth-logout-success",
    sessionTimeout: "auth-session-timeout",
    notAuthenticated: "auth-not-authenticated",
    notAuthorized: "auth-not-authorized"
});
angular.module("fooforms.authentication").controller("LoginCtrl", ["$scope", "$rootScope", "AUTH_EVENTS", "AuthService", function (o, e, t, r) {
    "use strict";
    o.user = {username: "", password: ""}, o.login = function (o) {
        r.clearCredentials(), r.setCredentials(o.username, o.password), r.login()
    }
}]).controller("LogoutCtrl", ["$scope", "$rootScope", "AUTH_EVENTS", "AuthService", function (o, e, t, r) {
    "use strict";
    o.logout = function () {
        r.clearCredentials(), e.$broadcast(t.logoutSuccess)
    }
}]);

angular.module("fooforms.authentication").factory("AuthService", ["$rootScope", "$cookieStore", "$http", "Base64", "Session", "AUTH_EVENTS", "SERVER", function (e, t, r, a, o, n, c) {
    "use strict";
    return {
        login: function () {
            return r.post(c.rootUrl + "/login").success(function () {
                e.$broadcast(n.loginSuccess)
            }).error(function () {
                AuthService.clearCredentials(), e.$broadcast(n.loginFailed)
            })
        }, checkStoredCredentials: function (a) {
            var i = t.get("authdata");
            return i ? (r.defaults.headers.common.Authorization = "Basic " + i, r.get(c.rootUrl + "/api/users/check/me").success(function (t) {
                o.create(t), e.$broadcast(n.loginSuccess), a(null, t)
            }).error(function (e, o) {
                document.execCommand("ClearAuthenticationCache"), t.remove("authdata"), r.defaults.headers.common.Authorization = "Basic ", a(e + " - " + o)
            })) : void a("Login required.")
        }, setCredentials: function (e, o) {
            var n = a.encode(e + ":" + o);
            r.defaults.headers.common.Authorization = "Basic " + n, t.put("authdata", n)
        }, clearCredentials: function () {
            document.execCommand("ClearAuthenticationCache"), t.remove("authdata"), r.defaults.headers.common.Authorization = "Basic "
        }
    }
}]).service("Session", function () {
    "use strict";
    return this.posts = [], this.org = {}, this.create = function (e) {
        this.user = e
    }, this.destroy = function () {
        this.user = null, this.posts = null
    }, this
}).factory("Base64", function () {
    "use strict";
    var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    return {
        encode: function (t) {
            var r, a, o, n, c, i = "", s = "", u = "", h = 0;
            do r = t.charCodeAt(h++), a = t.charCodeAt(h++), s = t.charCodeAt(h++), o = r >> 2, n = (3 & r) << 4 | a >> 4, c = (15 & a) << 2 | s >> 6, u = 63 & s, isNaN(a) ? c = u = 64 : isNaN(s) && (u = 64), i = i + e.charAt(o) + e.charAt(n) + e.charAt(c) + e.charAt(u), r = a = s = "", o = n = c = u = ""; while (h < t.length);
            return i
        }, decode: function (t) {
            var r, a, o, n, c, i = "", s = "", u = "", h = 0, d = /[^A-Za-z0-9\+\/\=]/g;
            d.exec(t) && alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."), t = t.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            do o = e.indexOf(t.charAt(h++)), n = e.indexOf(t.charAt(h++)), c = e.indexOf(t.charAt(h++)), u = e.indexOf(t.charAt(h++)), r = o << 2 | n >> 4, a = (15 & n) << 4 | c >> 2, s = (3 & c) << 6 | u, i += String.fromCharCode(r), 64 != c && (i += String.fromCharCode(a)), 64 != u && (i += String.fromCharCode(s)), r = a = s = "", o = n = c = u = ""; while (h < t.length);
            return i
        }
    }
});
angular.module("fooforms.dashboard", []);
angular.module("fooforms.dashboard").controller("DashboardCtrl", ["$scope", function () {
}]);
angular.module("fooforms.dashboard").factory("DashboardService", ["$log", "Restangular", "Session", function (r, e, n) {
    "use strict";
    var o = e.all("dashboard");
    return {
        getUserDashboard: function (e) {
            o.get("user/" + n.user._id).then(function (r) {
                e(null, r)
            }, function (n) {
                r.error(n), e(n)
            })
        }, getCurrentOrgOrUser: function () {
            o.get("")
        }
    }
}]);
angular.module("fooforms.organisation", ["lodash"]);
angular.module("fooforms.organisation").controller("OrganisationCtrl", ["$rootScope", "$scope", "$log", "_", "OrganisationService", "Organisation", "Session", function (i, o, n, a, t, e, r) {
    "use strict";
    o.members = [], o.organisation = r.user.organisations[0], t.getMembers(o.organisation, function (i, n) {
        o.members = n
    }), o.updateOrg = function (i) {
        var o = {_id: i._id, photo: i.photo, billingEmail: i.billingEmail, title: i.title, displayName: i.displayName};
        t.updateOrg(o, function () {
        })
    }
}]);
angular.module("fooforms.organisation").factory("OrganisationService", ["$log", "Restangular", function (n, t) {
    "use strict";
    var r = t.all("organisations");
    return {
        createOrg: function (t, e) {
            r.post(t).then(function (n) {
                return e(null, n)
            }, function (t) {
                return n.error(t), e(t)
            })
        }, updateOrg: function (t, e) {
            r.customPUT(t).then(function (n) {
                return e(null, n)
            }, function (t) {
                return n.error(t), e(t)
            })
        }, deleteOrg: function (t, e) {
            r.remove().then(function () {
                return e(null)
            }, function (t) {
                return n.error(t), e(t)
            })
        }, getMembers: function (e, i) {
            "function" != typeof e.getList && (e = t.restangularizeElement(r, e, "")), e.getList("members").then(function (n) {
                return i(null, n)
            }, function (t) {
                return n.error(t), i(t)
            })
        }
    }
}]).service("Organisation", function () {
    "use strict";
    return this.activeOrg = {}, this.setOrg = function (n) {
        return this.activeOrg = n, this.activeOrg
    }, this
});